service: serverless-multiservice-example
frameworkVersion: '2 || 3'

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage, self:custom.defaultStage}
  memorySize: 512
  timeout: 10
  logRetentionInDays: 90
  logs:
    httpApi: true
  httpApi:
    # metrics: true # Enable if you need
    cors: true

package:
  individually: true

plugins:
  - serverless-dotenv-plugin
  - serverless-bundle
  - serverless-offline

custom:
  defaultStage: dev
  defaultRegion: ap-northeast-1
  bundle:
    packager: yarn
    tsConfig: ../../tsconfig.json
    caching: false
    linting: false
  serverless-offline:
    httpPort: 3000
    noPrependStageInUrl: true
  dotenv:
    path: ./env
  client:
    bucketName: ${self:service}-static-${self:provider.stage}
    distributionFolder: dist

functions:
  backend:
    handler: src/handler.handler
    events:
      - httpApi:
          path: '/{proxy+}'
          method: '*'

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: PublicRead
        WebsiteConfiguration:
          IndexDocument: index.html
          ErrorDocument: error.html
        BucketName: ${self:custom.client.bucketName}
      DeletionPolicy: Retain

    BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        PolicyDocument:
          Id: WebsiteDistributionPolicy
          Version: '2012-10-17'
          Statement:
            - Sid: PublicReadForGetBucketObjects
              Effect: Allow
              Principal: '*'
              Action: 's3:GetObject'
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref S3Bucket
                  - /*
        Bucket: !Ref S3Bucket

  Outputs:
    WebsiteURL:
      Value: !GetAtt
        - S3Bucket
        - WebsiteURL
      Description: URL for website hosted on S3

    S3BucketSecureURL:
      Value: !Join
        - ''
        - - 'https://'
          - !GetAtt
            - S3Bucket
            - DomainName
      Description: Name of S3 bucket to hold website content
